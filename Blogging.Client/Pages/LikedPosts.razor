@page "/likedposts"
@using Blogging.Client.Services
@using Blogging.Shared.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject PostService PostService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Nav

<h3>Posts I Liked</h3>

@if (isLoading)
{
    <p>Loading liked posts...</p>
}
else if (likedPosts.Count == 0)
{
    <p>You haven't liked any posts yet.</p>
}
else
{
    <ul class="list-group">
        @foreach (var post in likedPosts)
        {
            <li class="list-group-item">
                <b>@post.Title</b> by @post.AuthorEmail
                <br />
                <small>Likes: @post.Likes.Count</small>
                <br />
                <button class="btn btn-sm btn-outline-primary me-2" @onclick='() => Nav.NavigateTo($"/posts/{post.Id}")'>View</button>
            </li>
        }
    </ul>
}

@code {
    private List<Post> likedPosts = new();
    private bool isLoading = true;
    private string? userId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        userId = user.FindFirst("id")?.Value;

        if (!string.IsNullOrEmpty(userId))
        {
            var allPosts = await PostService.GetAllAsync();
            likedPosts = allPosts.Where(p => p.Likes.Contains(userId)).ToList();
        }

        isLoading = false;
    }
}
