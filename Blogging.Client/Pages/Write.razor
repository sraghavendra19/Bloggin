@page "/write"

@using Blogging.Client.Services
@using Blogging.Shared.DTOs
@inject ApiService Api
@inject AuthService AuthService
@inject NavigationManager Nav

<h3>Write a Post</h3>

<div>
    <input placeholder="Title" @bind="title" class="form-control mb-2"/>
    <select @bind="privacy" class="form-select mb-2">
        <option value="public">Public</option>
        <option value="followed">Followed</option>
        <option value="private">Private</option>
    </select>
    <textarea rows="12" cols="80" @bind="markdown" class="form-control mb-2"></textarea>
    <br />
    <button class="btn btn-primary" @onclick="Save">Save</button>
</div>

@if (!string.IsNullOrEmpty(status))
{
    <p>@status</p>
}

@code {
    private string title = "";
    private string markdown = "";
    private string privacy = "public";
    private string status = "";

    private async Task Save()
    {
        status = "";

        // âœ… Use the correct route (singular 'post') to match PostController
        var resp = await Api.PostAsync("/api/post", 
            new CreatePostRequest(title, markdown, privacy), 
            withAuth: true);

        if (resp.IsSuccessStatusCode)
        {
            status = "Saved!";
            title = "";
            markdown = "";

            // Navigate to the posts list
            Nav.NavigateTo("/posts");
        }
        else
        {
            status = $"Error: {resp.StatusCode}";
            if (resp.Content != null)
            {
                var t = await resp.Content.ReadAsStringAsync();
                status += " " + t;
            }
        }
    }
}
