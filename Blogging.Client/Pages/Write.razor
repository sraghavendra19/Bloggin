@page "/write"
@inject ApiService Api
@inject AuthService Auth

<h3>Write a Post</h3>

<div>
    <input placeholder="Title" @bind="title" />
    <br />
    <select @bind="privacy">
        <option value="public">Public</option>
        <option value="followed">Followed</option>
        <option value="private">Private</option>
    </select>
    <br/>
    <textarea rows="12" cols="80" @bind="markdown"></textarea>
    <br />
    <button @onclick="Save">Save</button>
</div>

@if (!string.IsNullOrEmpty(status))
{
    <p>@status</p>
}

@code {
    private string title = "";
    private string markdown = "";
    private string privacy = "public";
    private string status = "";

    private async Task Save()
    {
        status = "";
        var resp = await Api.PostAsync("/api/posts", new Blogging.Shared.DTOs.CreatePostRequest(title, markdown, privacy), withAuth: true);
        if (resp.IsSuccessStatusCode)
        {
            status = "Saved!";
            title = markdown = "";
        }
        else
        {
            status = $"Error: {resp.StatusCode}";
            if (resp.Content != null)
            {
                var t = await resp.Content.ReadAsStringAsync();
                status += " " + t;
            }
        }
    }
}
